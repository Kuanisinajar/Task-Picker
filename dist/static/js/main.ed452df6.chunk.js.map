{"version":3,"sources":["profile.svg","components/tagObj.js","components/tagList.js","actions/addTag.js","components/taskObj.js","actions/manageTask.js","components/currentTask.js","components/navigation.js","components/taskForm.js","components/taskList.js","components/picker.js","actions/setCurrentTask.js","components/signIn.js","actions/authAction.js","components/signUp.js","components/personalPanel.js","App.js","serviceWorker.js","reducers/projectReducer.js","reducers/authReducer.js","reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["module","exports","__webpack_require__","p","TagObj","state","tag","_this","props","active","handleClick","e","setState","checkTagState","react_default","a","createElement","className","this","onClick","Component","TagList","noNewTag","ownerId","auth","uid","handleChange","Object","objectSpread","target","value","handleSubmit","addTag","_this2","newTagForm","id","type","onChange","placeholder","userContent","userTags","map","index","tagObj","key","defaultContent","defaultTags","compose","connect","firestore","ordered","filter","firebase","dispatch","getState","_ref","getfirebase","getFirestore","collection","add","then","catch","err","firestoreConnect","TaskObj","task","description","tags","editing","toggleEditMode","defineProperty","name","handleTags","split","preventDefault","editTask","isActive","newTags","toConsumableArray","push","original","console","log","tagList","content","onSubmit","defaultValue","autoComplete","join","components_tagList","deleteTask","userId","taskId","_ref2","getFirebase","doc","delete","_ref3","update","currentTask","project","taskObj","tasks","Navigation","handleSelect","i","areaLine","document","getElementsByClassName","titleScroll","getElementById","template","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","classList","remove","return","toggle","style","transform","TaskForm","words","addTask","htmlFor","form","allTags","userTasks","defaultTasks","defaultObjects","length","userObjects","Picker","selectedTags","pickTask","allTasks","options","match","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","taskTag","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","setCurrentTask","Math","floor","random","SignIn","email","password","redirectToHome","Redirect","to","signIn","Link","authError","creds","credentials","signInWithEmailAndPassword","currentUser","get","res","data","signOut","SignUp","signUp","newUser","createUserWithEmailAndPassword","user","App","authPannel","toggleAuthPannel","BrowserRouter","picker","components_currentTask","taskForm","taskList","navigation","Route","path","component","Boolean","window","location","hostname","initState","projectReducer","arguments","action","newTasks","concat","shouldAdd","newAllTags","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed452df6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.4b7620c7.svg\";","import React, { Component } from 'react';\n\nclass TagObj extends Component {\n\n    state = {\n        tag: this.props.tag,\n        active: false\n    }\n    \n    handleClick = (e) => {\n        this.setState({\n            active: !this.state.active\n        }, () => {\n            this.props.checkTagState(this.state.active, this.props.tag)\n        });\n\n    }\n\n    render() {\n        return (\n            <div className={this.state.active ? \"tagObj tagActive\" : \"tagObj\"} onClick={this.handleClick}>\n                {this.props.tag}\n            </div>\n        )\n    }\n\n}\n\nexport default TagObj;","import React, { Component } from 'react';\nimport TagObj from './tagObj';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { addTag } from '../actions/addTag';\n\n\nclass TagList extends Component {\n    state = {\n        noNewTag: this.props.noNewTag,\n        tag: {\n            tag: \"\",\n            ownerId: this.props.auth.uid\n        }\n\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            tag: {\n                ...this.state.tag,\n                tag: e.target.value   \n            }\n        });\n    }\n\n    handleSubmit = (e) => {\n        this.props.addTag(this.state.tag);\n        this.setState({\n            tag: {\n                ...this.state.tag,\n                tag: \"\"   \n            }\n        });\n    }\n\n    render() {\n        const newTagForm = this.state.noNewTag ? null : (\n            <div id=\"tag-input\" className='tagObj'>\n                <input type=\"text\" onChange={this.handleChange} value={this.state.tag.tag} placeholder=\"New Task\" />\n                <span onClick={this.handleSubmit}>submit</span>\n            </div>\n        )\n\n        const userContent = this.props.userTags && this.props.userTags ? (\n            this.props.userTags.map((tag, index) => {\n                return (\n                    <TagObj tag={tag.tag}\n                        checkTagState={this.props.checkTagState}\n                        key={index} />\n                )\n            })\n        ) : (\n                <p>No tags</p>\n            );\n\n        const defaultContent = this.props.defaultTags && this.props.defaultTags ? (\n            this.props.defaultTags.map((tag, index) => {\n                return (\n                    <TagObj tag={tag.tag}\n                        checkTagState={this.props.checkTagState}\n                        key={index} />\n                )\n            })\n        ) : (\n                <p>No tags</p>\n            );\n\n        return (\n            <div id=\"tagList\">\n                {newTagForm}\n                {this.props.auth.uid ? userContent : defaultContent}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    const userTags = state.firestore.ordered.userTags && state.firestore.ordered.userTags.filter(tag => tag.ownerId === state.firebase.auth.uid);\n    return {\n        userTags: userTags,\n        defaultTags: state.firestore.ordered.defaultTags,\n        auth: state.firebase.auth,\n        firestore: state.firestore\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTag: (tag) => { dispatch(addTag(tag)) }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'defaultTags' }, { collection: \"userTags\" }\n    ])\n)(TagList);\n\n","export const addTag = (tag) => {\n\n    return (dispatch, getState, { getfirebase, getFirestore}) => {\n        const firestore = getFirestore();\n\n        firestore.collection('userTags').add({ \n            ...tag\n        }).then(() => {\n            dispatch({\n                type: \"ADD_TAG\",\n                tag: tag\n            });\n        }).catch((err) => {\n            dispatch({\n                type: \"ADD_TAG_ERROR\",\n                err\n            });\n        })\n    }\n}","import React, { Component } from 'react';\nimport TagList from './tagList';\nimport { connect } from 'react-redux';\nimport { deleteTask, editTask } from '../actions/manageTask';\n\n\nclass TaskObj extends Component {\n    state = {\n        task: {\n            task: this.props.task.task,\n            description: this.props.task.description,\n            tags: this.props.task.tags,\n            id: this.props.task.id\n        },\n        editing: false\n    }\n\n    toggleEditMode = () => {\n        this.setState({\n            editing: !this.state.editing\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            task: {\n                ...this.state.task,\n                [e.target.name]: e.target.value\n            } \n        });\n    }\n\n    handleTags = (e) => {\n        let tags = e.target.value.split(' ');\n        this.setState({\n            task: {\n                ...this.state.task,\n                tags: tags\n            }\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.editTask(this.state.task);\n        this.setState({\n            editing: !this.state.editing\n        });\n    }\n\n    checkTagState = (isActive, tag) => {\n        let newTags = [...this.state.task.tags]\n        if (isActive) {\n            newTags.push(tag);\n            this.setState({\n                task: {\n                    ...this.state.task,\n                    tags: newTags\n                }\n            });\n        } else {\n            newTags = newTags.filter(original => original !== tag);\n            this.setState({\n                task: {\n                    ...this.state.task,\n                    tags: newTags\n                }\n            });\n        }\n    }\n\n    render() {\n        console.log(this.props.task.tags);\n        const tagList = this.props.task.tags && this.props.task.tags.map((tag, index) => {\n            return (\n                <div key={index} className=\"tagObj\">\n                    {tag}\n                </div>\n            )\n        });\n\n        const content = this.state.editing ? (\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name='task' onChange={this.handleChange} defaultValue={this.state.task.task} autoComplete=\"off\" />\n                <input type=\"text\" name='description' onChange={this.handleChange} defaultValue={this.state.task.description} autoComplete=\"off\" />\n                <input type=\"text\" name='tags' onChange={this.handleTags} value={this.state.task.tags.join(' ')} autoComplete=\"off\" />\n                <TagList checkTagState={this.checkTagState} noNewTag={false} />\n                <button>submit</button>\n            </form>\n        ) : (\n                <div className='taskObjWrapper'>\n                    <div className=\"title\">{this.props.task.task}</div>\n                    <div className=\"description\">{this.props.task.description}</div>\n                    <div className=\"tags\">{tagList}</div>\n                    <button className='deleteBtn' onClick={() => { this.props.deleteTask(this.props.task.id) }}>Delete</button>\n                    <button className='editBtn' onClick={this.toggleEditMode}>Edit</button>\n                </div>\n            );\n\n        return (\n            <div className=\"taskObj\" key={this.props.task.id}>\n                {content}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.auth.uid\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteTask: (taskId) => { dispatch(deleteTask(taskId)) },\n        editTask: (task) => { dispatch(editTask(task)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskObj);","export const addTask = (task) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // async calls to database\n        const firestore = getFirestore();\n        firestore.collection('userTasks').add({\n            ...task\n        }).then(() => {\n            dispatch({\n                type: \"ADD_TASK\",\n                task: task\n            });\n        }).catch((err) => {\n            dispatch({\n                type: \"ADD_TASK_ERROR\",\n                err\n            });\n        })\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        // async calls to database\n        const firestore = getFirestore();\n        firestore.collection('userTasks').doc(taskId).delete()\n            .then(() => {\n                dispatch({\n                    type: \"DELETE_TASK\",\n                });\n            }).catch((err) => {\n                dispatch({\n                    type: \"DELETE_TASK_ERROR\",\n                    err\n                });\n            })\n\n    }\n}\n\nexport const editTask = (task) => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        firestore.collection('userTasks').doc(task.id).update({\n            ...task \n        }).then(() => {\n            dispatch({\n                type: \"UPDATE_TASK\",\n                task: task\n            });\n        }).catch((err) => {\n            dispatch({\n                type: \"UPDATE_TASK_ERROR\",\n                err\n            })\n        })\n    }\n}","import React from 'react';\nimport TaskObj from './taskObj';\nimport { connect } from 'react-redux'\n\n\nconst CurrentTask = ({currentTask}) => {\n\n    const content = currentTask ? (\n        <TaskObj tasks={currentTask} />\n    ):(\n       <span>No task!</span>\n    );\n\n    return(\n        <div id=\"currentTask\">\n            {content}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        currentTask: state.project.currentTask\n    }\n}\n\nexport default connect(mapStateToProps)(CurrentTask);","import React, { Component } from 'react';\n\n\n\n\nclass Navigation extends Component {\n\n    handleSelect = (e, i) => {\n        const areaLine = document.getElementsByClassName('area-line');\n        const titleScroll = document.getElementById('title-scroll');\n        const template = document.getElementById('template');\n        for (let item of areaLine) {\n            item.classList.remove('area-line-active');\n        }\n        e.target.classList.toggle('area-line-active');\n        titleScroll.style.transform = \"translate(0, -\" + i * 100 + \"%)\"\n        template.style.transform = \"translate(-\" + i * 100 + \"%, 0)\"\n    }\n\n    render() {\n        return (\n            <div id=\"nav\">\n                <div id=\"area-titles\">\n                    <div id=\"title-scroll\">\n                        <div className=\"title\"><span>挑任務</span></div>\n                        <div className=\"title\"><span>當下任務</span></div>\n                        <div className=\"title\"><span>新增任務</span></div>\n                        <div className=\"title\"><span>任務清單</span></div>\n                    </div>\n                </div>\n                <div id=\"area-paging\">\n                    <div className=\"area-line area-line-active\" onClick={(e) => { this.handleSelect(e, 0) }}></div>\n                    <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 1) }}></div>\n                    <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 2) }}></div>\n                    <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 3) }}></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Navigation;","import React, { Component } from 'react';\n//import TagObj from './tagObj';\nimport { connect } from 'react-redux';\nimport { addTask } from '../actions/manageTask';\nimport TagList from './tagList';\n\nclass TaskForm extends Component {\n\n    state = {\n        task: \"\",\n        description: \"\",\n        tags: [],\n        ownerId: this.props.auth.uid\n    }\n\n    checkTagState = (isActive, tag) => {\n        let tags = [...this.state.tags];\n        if (isActive) {\n            tags.push(tag);\n            this.setState({\n                tags: tags\n            });\n        } else {\n            let newTags = tags.filter(words => words !== tag);\n            this.setState({\n                tags: newTags\n            });\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleTags = (e) => {\n        let tags = e.target.value.split(' ');\n        this.setState({\n            tags: tags\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        // actions based on login state\n        if (this.props.auth.uid){ this.props.addTask(this.state, this.props.auth.uid) }\n        \n        this.setState({\n            task: \"\",\n            description: \"\",\n            tags: []\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form id=\"taskForm\" onSubmit={this.handleSubmit}>\n                    <label htmlFor=\"task\">Task: </label>\n                    <input type=\"text\" id='task' onChange={this.handleChange} value={this.state.task} autoComplete=\"off\" form=\"taskForm\" />\n                    <label htmlFor=\"description\"> Description</label>\n                    <input type=\"text\" id='description' onChange={this.handleChange} value={this.state.description} autoComplete=\"off\" form=\"taskForm\" />\n                    <label htmlFor=\"tags\">Tags: </label>\n                    <input type=\"text\" id='tags' onChange={this.handleTags} value={this.state.tags.join(' ')} autoComplete=\"off\" form=\"taskForm\" />\n                    <TagList checkTagState={this.checkTagState} noNewTag={false}/>\n                    <button form=\"taskForm\">submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allTags: state.project.allTags,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addTask: (task, userId) => { dispatch(addTask(task, userId)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm); ","import React from 'react';\nimport TaskObj from './taskObj';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\n\nconst TaskList = ({ defaultTasks, userTasks, auth }) => {\n    const defaultObjects = defaultTasks && defaultTasks.length ? (\n        defaultTasks.map(task => {\n            return (\n                <TaskObj key={task.id} task={task} />\n            )\n        })\n    ) : (\n            <p>No Tasks!</p>\n        );\n\n    const userObjects = userTasks && userTasks.length ? (\n        userTasks.map(tasks => {\n            return (\n                <TaskObj key={tasks.id} task={tasks} />\n            )\n        })\n    ) : (\n            <p>No Tasks!</p>\n        );\n\n    return (\n        <div id=\"taskList\">\n            { auth.uid ? userObjects : defaultObjects }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    const userTasks = state.firestore.ordered.userTasks && state.firestore.ordered.userTasks.filter(task => task.ownerId === state.firebase.auth.uid);\n\n    return {\n        userTasks: userTasks,\n        defaultTasks: state.firestore.ordered.defaultTasks,\n        firestore: state.firestore,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'defaultTasks' }, { collection: 'userTasks' }\n    ])\n)(TaskList);","import React, { Component } from 'react';\nimport TagList from './tagList';\nimport { connect } from 'react-redux';\nimport { setCurrentTask } from '../actions/setCurrentTask';\n\nclass Picker extends Component {\n    state = {\n        selectedTags: []\n    }\n\n    checkTagState = (isActive, tag) => {\n        let newTags = [...this.state.selectedTags]\n        if (isActive) {\n            newTags.push(tag);\n            this.setState({\n                selectedTags: newTags\n            });\n        } else {\n            newTags = newTags.filter(original => original !== tag);\n            this.setState({\n                selectedTags: newTags\n            });\n        }\n    }\n\n    pickTask = () => {\n        let allTasks = [...this.props.tasks];\n        let options = [];\n        for (let task of allTasks) {\n            let match = false;\n            for(let taskTag of task.tags){\n                for (let sTag of this.state.selectedTags) {\n                    if (taskTag === sTag) {\n                        match = true;\n                    }\n                }\n            }\n            if (match) {\n                options.push(task);\n            }\n        }\n        if (options.length === 0) {\n            this.props.setCurrentTask(allTasks[Math.floor(Math.random() * allTasks.length)]);\n        } else {\n            this.props.setCurrentTask(options[Math.floor(Math.random() * options.length)]);\n        }\n    }\n\n    render(){\n        return(\n            <div id=\"picker\">\n                <p>filters: </p>\n                <TagList checkTagState={this.checkTagState} noNewTag={true}/>\n                <button onClick={this.pickTask}>Pick!</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        tasks: state.project.tasks,\n        allTags: state.project.allTags,\n        currentTask: state.project.currentTask\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        setCurrentTask: (task) => {dispatch(setCurrentTask(task))}\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Picker);","export const setCurrentTask = (task) => {\n    return {\n        type: \"SET_CURRENT_TASK\",\n        task: task\n    }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions/authAction';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nclass SignIn extends Component {\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    redirectToHome = () => {\n        return <Redirect to='/' />\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        console.log(this.props);\n        if (this.props.auth.uid) {\n            return <Redirect to='/' />\n        }\n        return (\n            <div id=\"signInForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className='authTitle'>登入</div>\n                    <Link to='/'><div className='closeBtn'><div className='bar'></div></div></Link>\n                    <input type=\"text\" id=\"email\" onChange={this.handleChange} value={this.state.email} placeholder=\"帳號\" />\n                    <input type=\"text\" id='password' onChange={this.handleChange} value={this.state.password} placeholder=\"密碼\" />\n                    <button>Submit</button>\n                </form>\n                {/* <Link onClick={() => { this.props.signOut() }} to='/'>signout</Link> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => { dispatch(signIn(creds)) },\n        signOut: () => { dispatch(signOut()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            const userId = firebase.auth().currentUser.uid;\n            firestore.collection('users').doc(userId).get()\n                .then((res) => {\n                    // console.log(res.data());\n                    dispatch({ type: \"LOGIN_SUCCESS\", data: res.data()})\n                }).catch((err) => {\n                    console.log(err);\n                });\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err })\n        })\n    }\n}\n\nexport const signOut = () => {\n\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut()\n            .then(() => {\n                dispatch({ type: \"LOGOUT_SUCCESS\" })\n            })\n    }\n}\n\nexport const signUp = (newUser) => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return firestore.collection('users').doc(res.user.uid).collection('user-profile').add({\n                name: newUser.name\n            })\n        }).then(() => {\n            dispatch({ type: \"SIGNUP_SUCCESS\" })\n        }).catch((err) => {\n            dispatch({ type: \"SIGNUP_ERROR\", err });\n        })\n    }\n\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { signUp } from '../actions/authAction'\nimport { Redirect, Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        name: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        if (this.props.auth.uid) {\n            return <Redirect to='/' />\n        }\n        return (\n            <div id='signUpForm'>\n                <form onSubmit={this.handleSubmit}>\n                    <div className='authTitle'>加入吧！</div>\n                    <Link to='/'><div className='closeBtn'><div className='bar'></div></div></Link>\n                    <input type=\"text\" id=\"email\" onChange={this.handleChange} value={this.state.email} placeholder=\"email\" />\n                    <input type=\"text\" id='password' onChange={this.handleChange} value={this.state.password} placeholder=\"password\" />\n                    <input type=\"text\" id=\"name\" onChange={this.handleChange} value={this.state.name} placeholder=\"name\" />\n                    <button>submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => { dispatch(signUp(newUser)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\nimport ProfilePic from '../profile.svg';\nimport SignIn from './signIn';\nimport SignUp from './signUp';\n\n\nclass PersonalPanel extends Component {\n\n    render() {\n        //const content = this.props.auth.uid ? (<p>Sign Out</p>) : (<p>Log In</p>);\n        return (\n            <div id=\"personal-panel\">\n                <img id='profile-pic' src={ProfilePic} alt=\"\"/>\n                <div id=\"login-panel\">\n                    <SignIn />\n                    <SignUp />\n                    {/* <input type=\"text\" id=\"email\" onChange={this.handleChange} value={this.state.email} placeholder=\"email\" />\n                    <input type=\"text\" id='password' onChange={this.handleChange} value={this.state.password} placeholder=\"password\" />\n                    <button onClick={this.handleSubmit}>submit</button>\n                    <div>{this.props.authError ? this.props.authError : null}</div>\n                    <button onClick={() => { this.props.signOut() }}>signout</button>\n                    <div>{content}</div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     console.log(state);\n//     return {\n//         auth: state.firebase.auth,\n//         authError: state.auth.authError\n//     }\n// }\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         signIn: (creds) => { dispatch(signIn(creds)) },\n//         signOut: () => { dispatch(signOut()) }\n//     }\n// }\n\n// export default connect(mapStateToProps, mapDispatchToProps)(PersonalPanel)\n\nexport default PersonalPanel","import React, { Component } from 'react';\n//import { BrowserRouter, Route } from 'react-router-dom';\nimport CurrentTask from './components/currentTask';\nimport Navigation from './components/navigation';\nimport TaskForm from './components/taskForm';\nimport TaskList from './components/taskList';\nimport Picker from './components/picker';\nimport SignIn from './components/signIn';\nimport SignUp from './components/signUp';\nimport PersonalPanel from './components/personalPanel';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Link, NavLink } from 'react-router-dom';\nimport { signIn, signOut } from './actions/authAction'\n\n\nclass App extends Component {\n\n  render() {\n    \n    // Serve different component with login state\n    const authPannel = this.props.firebase.auth.uid ? (\n      <div id='authPannel'>\n        <button onClick={() => { this.props.signOut() }}>Sign Out</button>\n      </div>\n    ) : (\n        <div id='authPannel'>\n          <Link to=\"/signIn\" onClick={this.toggleAuthPannel}>Sign In</Link>\n          <Link to='/signUp' onClick={this.toggleAuthPannel}>Sign Up</Link>\n        </div>\n      );\n\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <ul id='template'>\n            <li><Picker /></li>\n            <li><CurrentTask /></li>\n            <li><TaskForm /></li>\n            <li><TaskList /></li>\n          </ul>\n          <Navigation />\n          { authPannel }\n          <Route path='/signIn' component={SignIn} />\n          <Route path='/signUp' component={SignUp} />\n          \n          {/* <PersonalPanel /> */}\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => { dispatch(signOut()) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    tasks: [],\n    allTags: [],\n    currentTask: null\n}\n\nconst projectReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case \"ADD_TASK\":\n            //action.task.id = state.tasks[state.tasks.length-1].id + 1;\n            console.log(action.task);\n            let newTasks = [...state.tasks, action.task];\n            return {\n                ...state,\n                tasks: newTasks\n            }\n        case \"ADD_TASK_ERROR\":\n            console.log(action.err);\n            return state;\n        case \"DELETE_TASK\":\n            console.log('this is deleted');\n            return state;\n        case \"DELETE_TASK_ERROR\":\n            console.log(action.err);\n            return state;\n        case \"UPDATE_TASK\":\n            console.log('update success');\n            return state;\n            case \"UPDATE_TASK_ERROR\":\n            console.log(action.err);\n            return state;\n        case \"ADD_TAG\":\n            // First, check if new tag already exsists\n            let shouldAdd = true;\n            for (let tag of state.allTags) {\n                if (action.tag === tag) {\n                    shouldAdd = false;\n                }\n            }\n            // Add it to state\n            let newAllTags = [...state.allTags];\n            if (shouldAdd) {\n                newAllTags.push(action.tag);\n                return {\n                    ...state,\n                    allTags: newAllTags\n                }\n            } else {\n                return state;\n            }\n        case \"SET_CURRENT_TASK\":\n            return {\n                ...state,\n                currentTask: action.task\n            }\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","const initState = {\n    authError: null,\n    userTasks: [],\n    userTags: []\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            return {\n                ...state,\n                authError: \"Login failed :(\"\n            }\n\n        case \"LOGIN_SUCCESS\":\n            console.log(\"logIn success!\");\n            console.log(action.data);\n            return {\n                authError: null,\n                userTasks: action.data.userTasks,\n                userTags: action.data.userTags\n            }\n        \n        case \"USER_DATA_LOADED\":\n            console.log('we did it');\n            return state;\n        case \"LOGOUT_SUCCESS\":\n            console.log(\"logout success\");\n            return state\n\n        case \"SIGNUP_SUCCESS\": \n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n\n        case \"SIGNUP_ERROR\": \n            console.log('signup failed');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n            \n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import projectReducer from './projectReducer';\nimport authReducer from './authReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    project: projectReducer,\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyDolOZMc-UodjynPUfkjyrq9m95VO3Peck\",\n    authDomain: \"task-picker-de255.firebaseapp.com\",\n    databaseURL: \"https://task-picker-de255.firebaseio.com\",\n    projectId: \"task-picker-de255\",\n    storageBucket: \"task-picker-de255.appspot.com\",\n    messagingSenderId: \"614294430544\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}