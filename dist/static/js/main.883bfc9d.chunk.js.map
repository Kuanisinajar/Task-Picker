{"version":3,"sources":["add.svg","edit.svg","flag.svg","dropUp.svg","components/tagObj.js","components/tagList.js","actions/addTag.js","components/taskObj.js","actions/manageTask.js","components/currentTask.js","components/navigation.js","components/taskForm.js","components/taskList.js","components/picker.js","components/signIn.js","actions/authAction.js","components/signUp.js","components/header.js","App.js","serviceWorker.js","reducers/projectReducer.js","reducers/authReducer.js","reducers/rootReducer.js","config/firebaseConfig.js","index.js","close.svg"],"names":["module","exports","__webpack_require__","p","TagObj","state","tag","_this","props","active","handleClick","e","setState","checkTagState","this","react_default","a","createElement","className","onClick","Component","TagList","noNewTag","ownerId","auth","uid","handleChange","Object","objectSpread","target","value","handleSubmit","addTag","matchWithEditingTaskTag","editingTaskTags","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_this2","newTagForm","type","onChange","placeholder","src","addIcon","alt","content","tags","length","map","index","tagObj","key","react_custom_scroll_default","heightRelativeToParent","compose","connect","localStore","allTags","defaultTags","firestore","ordered","firebase","dispatch","userId","getState","_ref","getfirebase","getFirestore","collection","add","then","catch","console","log","firestoreConnect","TaskObj","task","description","id","editing","showTagList","toggleEditMode","toggleTagList","defineProperty","name","handleTags","split","preventDefault","editTask","isActive","newTags","toConsumableArray","shouldAdd","item","push","filter","original","tagList","onSubmit","defaultValue","autoComplete","components_tagList","deleteTask","disableEdit","editImg","flagImg","taskId","_ref2","getFirebase","doc","delete","_ref3","update","CurrentTask","picked","defaultTaskBeforePick","defaultTaskAfterPick","handleFinishing","clearCurrentTask","currentTask","taskObj","Navigation","handleSelect","i","areaLine","document","getElementsByClassName","titleScroll","getElementById","template","classList","remove","toggle","style","transform","TaskForm","words","addTask","form","snapshot","tasks","contents","Picker","selectedTags","pickedTask","animationPerformed","returnToDefaultStyle","querySelector","toggleTagSelectionPannel","buttonWrapper","display","pickerTagList","opacity","pickerTags","querySelectorAll","cursor","forEach","pickTask","allTasks","options","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","taskTag","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","taskDeck","Math","floor","random","execute","setCurrentTask","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","animationEnd","taskCard","prevProps","prevState","loggedIn","onAnimationEnd","dropUp","defaultTasks","SignIn","email","password","redirectToHome","Redirect","to","signIn","Link","closeImg","authError","creds","credentials","signInWithEmailAndPassword","currentUser","get","res","data","where","docs","signOut","SignUp","signUp","newUser","createUserWithEmailAndPassword","user","authPannel","App","loadDataToCentral","BrowserRouter","picker","taskForm","taskList","navigation","header","Route","path","component","_ref4","clearCentralTasks","Boolean","window","location","hostname","initState","projectReducer","arguments","action","addingTask","addingTasks","concat","deletingTasks","updatingTasks","findIndex","updatingDefaultTasks","newAllTags","userTasks","userTags","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.883bfc9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.c0662be8.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.59724c85.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.6fa57ba3.svg\";","module.exports = __webpack_public_path__ + \"static/media/dropUp.66543978.svg\";","import React, { Component } from 'react';\n\nclass TagObj extends Component {\n\n    state = {\n        tag: this.props.tag,\n        active: false || this.props.active\n    }\n\n\n    handleClick = (e) => {\n        this.setState({\n            active: !this.state.active\n        }, () => {\n            this.props.checkTagState(this.state.active, this.props.tag)\n        });\n\n    }\n\n    componentDidUpdate() {\n        if (this.props.active && this.state.active === false) {\n            this.setState({\n                active: this.props.active\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.state.active ? \"tagObj tagActive\" : \"tagObj\"} onClick={this.handleClick}>\n                {this.props.tag}\n            </div>\n        )\n    }\n\n}\n\nexport default TagObj;","import React, { Component } from 'react';\nimport TagObj from './tagObj';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { addTag } from '../actions/addTag';\nimport CustomScroll from 'react-custom-scroll';\nimport addIcon from '../add.svg';\n\n\nclass TagList extends Component {\n    state = {\n        noNewTag: this.props.noNewTag,\n        tag: {\n            tag: \"\",\n            ownerId: this.props.auth.uid\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            tag: {\n                ...this.state.tag,\n                tag: e.target.value\n            }\n        });\n    }\n\n    handleSubmit = (e) => {\n        this.props.addTag(this.state.tag, this.props.auth.uid);\n        this.setState({\n            tag: {\n                ...this.state.tag,\n                tag: \"\"\n            }\n        });\n    }\n\n    matchWithEditingTaskTag = (tag, editingTaskTags) => {\n        let match = false;\n        for (let editingTag of editingTaskTags) {\n            if (tag === editingTag) {\n                match = true;\n            }\n        }\n        return match;\n    }\n\n    render() {\n        const newTagForm = this.state.noNewTag ? null : (\n            <div className=\"tagInput tagObj\">\n                <input type=\"text\" onChange={this.handleChange} value={this.state.tag.tag} placeholder=\"新標籤\" />\n                <span onClick={this.handleSubmit}><img src={addIcon} alt=\"\"/></span>\n            </div>\n        )\n\n        const content = this.props.tags && this.props.tags.length ? (\n            this.props.tags.map((tag, index) => {\n                const active = this.props.editingTaskTags && this.matchWithEditingTaskTag(tag.tag, this.props.editingTaskTags);\n                return (\n                    <TagObj tag={tag.tag}\n                        checkTagState={this.props.checkTagState}\n                        key={index}\n                        active={active} />\n                )\n            })\n        ) : (\n                <p>No tags</p>\n            );\n\n\n        return (\n            <div className=\"tagList\">\n                <CustomScroll heightRelativeToParent=\"100%\">\n                    {newTagForm}\n                    {content}\n                </CustomScroll>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    // const userTags = state.firestore.ordered.userTags && state.firestore.ordered.userTags.filter(tag => tag.ownerId === state.firebase.auth.uid);\n    return {\n        tags: state.localStore.allTags,\n        defaultTags: state.firestore.ordered.defaultTags,\n        auth: state.firebase.auth,\n        firestore: state.firestore\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTag: (tag, userId) => { dispatch(addTag(tag, userId)) }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'defaultTags' }, { collection: \"userTags\" }\n    ])\n)(TagList);\n\n","export const addTag = (tag, userId) => {\n\n    return (dispatch, getState, { getfirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        if (userId !== undefined) {\n            firestore.collection('userTags').add({\n                ...tag\n            }).then(() => {\n                dispatch({\n                    type: \"ADD_TAG\",\n                    tag: tag\n                });\n            }).catch((err) => {\n                dispatch({\n                    type: \"ADD_TAG_ERROR\",\n                    err\n                });\n            })\n        } else {\n            console.log('middle ware received');\n            dispatch({\n                type: \"ADD_TAG\",\n                tag: tag\n            });\n        }\n    }\n}","import React, { Component } from 'react';\nimport TagList from './tagList';\nimport { connect } from 'react-redux';\nimport { deleteTask, editTask } from '../actions/manageTask';\nimport editImg from '../edit.svg';\nimport flagImg from '../flag.svg';\nimport CustomScroll from 'react-custom-scroll';\n\n\nclass TaskObj extends Component {\n    state = {\n        task: {\n            task: this.props.task.task,\n            description: this.props.task.description,\n            tags: this.props.task.tags,\n            id: this.props.task.id\n        },\n        editing: false,\n        showTagList: false\n    }\n\n    toggleEditMode = () => {\n        this.setState({\n            editing: !this.state.editing\n        });\n    }\n\n    toggleTagList = () => {\n        this.setState({\n            showTagList: !this.state.showTagList\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            task: {\n                ...this.state.task,\n                [e.target.name]: e.target.value\n            }\n        });\n    }\n\n    handleTags = (e) => {\n        let tags = e.target.value.split(' ');\n        this.setState({\n            task: {\n                ...this.state.task,\n                tags: tags\n            }\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.editTask(this.state.task, this.props.userId);\n        this.setState({\n            editing: !this.state.editing\n        });\n    }\n\n    checkTagState = (isActive, tag) => {\n        let newTags = [...this.state.task.tags];\n        if (isActive) {\n            let shouldAdd = true;\n            for (let item of newTags) {\n                if (tag === item) {\n                    shouldAdd = false;\n                }\n            }\n            if (shouldAdd) {\n                newTags.push(tag);\n            }\n            this.setState({\n                task: {\n                    ...this.state.task,\n                    tags: newTags\n                }\n            });\n        } else {\n            newTags = newTags.filter(original => original !== tag);\n            this.setState({\n                task: {\n                    ...this.state.task,\n                    tags: newTags\n                }\n            });\n        }\n    }\n\n    render() {\n        const tagList = this.props.task.tags && this.props.task.tags.map((tag, index) => {\n            return (\n                <div key={index} className=\"tagObj\">\n                    {tag}\n                </div>\n            )\n        });\n\n        const content = this.state.editing ? (\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"text\" name='task' onChange={this.handleChange} defaultValue={this.state.task.task} autoComplete=\"off\" />\n                <textarea type=\"text\" name='description' onChange={this.handleChange} defaultValue={this.state.task.description} autoComplete=\"off\" />\n                {/* <label htmlFor=\"\">已選取</label>\n                <input type=\"text\" name='tags' onChange={this.handleTags} value={this.state.task.tags.join(' ')} autoComplete=\"off\" /> */}\n                <TagList checkTagState={this.checkTagState} noNewTag={false} editingTaskTags={this.state.task.tags} />\n                <div className=\"formButtonArea\">\n                    <button>儲存</button>\n                    <button onClick={() => { this.props.deleteTask(this.props.task.id) }} name='delete'>刪除</button>\n                </div>\n            </form>\n        ) : (\n                <div className='taskObjWrapper'>\n\n                    <div className='taskObjUpper'>\n                        <div className=\"title\">{this.props.task.task}</div>\n                    </div>\n                    <div className=\"taskObjLower\">\n                        <div className=\"description\">{this.props.task.description}</div>\n                    </div>\n                    <div className={this.state.showTagList ? \"taskObjTagList\" : \"taskObjTagList tagListHidden\"}>\n                        <CustomScroll heightRelativeToParent=\"100%\">\n                        <div className=\"tags\">\n                            {tagList}\n                        </div>\n                        </CustomScroll>\n                    </div>\n\n                    {/* <button className='closeBtn' onClick={() => { this.props.deleteTask(this.props.task.id) }}>\n                        <img src={closeImg} />\n                    </button> */}\n                    { this.props.disableEdit ? \n                    null : \n                    <button className='editBtn' onClick={this.toggleEditMode}>\n                        <img src={editImg} alt='' />\n                    </button>\n                     }\n                     { this.props.task.tags ? \n                    <button className=\"toggleTagsBtn\" onClick={this.toggleTagList}>\n                        <img src={flagImg} alt='' />\n                    </button> \n                    : null\n                     }\n                </div>\n            );\n\n\n        return (\n            <div className={this.state.editing ? \"taskEditForm\" : \"taskObj\"}\n                key={this.props.task.id}>\n                {content}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userId: state.firebase.auth.uid\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteTask: (taskId) => { dispatch(deleteTask(taskId)) },\n        editTask: (task, userId) => { dispatch(editTask(task, userId)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskObj);","export const addTask = (task, userId) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        if (userId !== undefined) {\n            firestore.collection('userTasks').add({\n                ...task\n            }).then((snapshot) => {\n                dispatch({\n                    type: \"ADD_TASK\",\n                    task: task,\n                    taskId: snapshot.id\n                });\n            }).catch((err) => {\n                dispatch({\n                    type: \"ADD_TASK_ERROR\",\n                    err\n                });\n            })\n        } else {\n            const key = getState().localStore.tasks.length\n            dispatch({\n                type: \"ADD_TASK\",\n                task: task,\n                taskId: key\n            });\n        }\n    }\n}\n\nexport const deleteTask = (taskId) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        // async calls to database\n        const firestore = getFirestore();\n        firestore.collection('userTasks').doc(taskId).delete()\n            .then(() => {\n                dispatch({\n                    type: \"DELETE_TASK\",\n                    taskId: taskId\n                });\n            }).catch((err) => {\n                dispatch({\n                    type: \"DELETE_TASK_ERROR\",\n                    err\n                });\n            })\n    }\n}\n\nexport const editTask = (task, userId) => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const firestore = getFirestore();\n        if (userId) {\n            firestore.collection('userTasks').doc(task.id).update({\n                task: task.task,\n                description: task.description,\n                tags: task.tags,\n                id: task.id,\n                ownerId: userId\n            }).then(() => {\n                dispatch({\n                    type: \"UPDATE_TASK\",\n                    task: task\n                });\n            }).catch((err) => {\n                dispatch({\n                    type: \"UPDATE_TASK_ERROR\",\n                    err\n                })\n            })\n        } else {\n            dispatch({\n                type: \"UPDATE_DEFAULT_TASK\",\n                task: task\n            })\n        }\n    }\n}\n\nexport const loadDataToCentral = (ownerId) => {\n    const id = ownerId;\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore();\n        if (id !== undefined) {\n            firestore.collection('userTasks').where('ownerId', '==', ownerId).get()\n                .then((snapshot) => {\n                    const tasks = [];\n                    snapshot.docs.forEach(doc => {\n                        const task = doc.data();\n                        task.id = doc.id;\n                        tasks.push(task);\n                    });\n                    dispatch({\n                        type: 'LOAD_TASKS_FROM_FIRESTORE',\n                        tasks: tasks\n                    });\n                }).catch((err) => {\n                    dispatch({\n                        type: 'LOAD_TASKS_ERROR',\n                        err\n                    });\n                });\n            firestore.collection('userTags').where('ownerId', '==', ownerId).get()\n                .then((snapshot) => {\n                    const tags = [];\n                    snapshot.docs.forEach(doc => {\n                        const tag = doc.data();\n                        tag.id = doc.id;\n                        tags.push(tag);\n                    });\n                    dispatch({\n                        type: 'LOAD_TAGS_FROM_FIRESTORE',\n                        tags: tags\n                    });\n                }).catch((err) => {\n                    dispatch({\n                        type: 'LOAD_TAGS_ERROR',\n                        err\n                    });\n                });\n        } else {\n            firestore.collection('defaultTasks').get()\n                .then((snapshot) => {\n                    const tasks = [];\n                    snapshot.docs.forEach(doc => {\n                        const task = doc.data();\n                        task.id = doc.id;\n                        tasks.push(task);\n                    });\n                    dispatch({\n                        type: 'LOAD_TASKS_FROM_FIRESTORE',\n                        tasks: tasks\n                    });\n                })\n            firestore.collection('defaultTags').get()\n                .then((snapshot) => {\n                    const tags = [];\n                    snapshot.docs.forEach(doc => {\n                        const tag = doc.data();\n                        tag.id = doc.id;\n                        tags.push(tag);\n                    });\n                    dispatch({\n                        type: 'LOAD_TAGS_FROM_FIRESTORE',\n                        tags: tags\n                    });\n                })\n        }\n    }\n}\n\nexport const setCurrentTask = (task) => {\n    console.log(task);\n    return {\n        type: \"SET_CURRENT_TASK\",\n        task: task\n    }\n}\n\nexport const clearCurrentTask = () => {\n    return {\n        type: \"CLEAR_CURRENT_TASK\"\n    }\n}","import React, { Component } from 'react';\nimport TaskObj from './taskObj';\nimport { connect } from 'react-redux'\nimport { clearCurrentTask } from '../actions/manageTask'\n\nclass CurrentTask extends Component {\n    state = {\n        picked: false,\n    }\n\n    defaultTaskBeforePick = {\n        task: \"挑選任務\",\n        description: \"無論你選擇做什麼，只要持續地做，就會變得更好。\"\n    }\n    defaultTaskAfterPick = {\n        task: \"深呼吸，然後擁抱天空\",\n        description: \"完成了一件任務，很好。感受一下現在的心情吧！\"\n    }\n\n    handleFinishing = () => {\n        this.props.clearCurrentTask();\n        this.setState({\n            picked: true\n        }, () => {\n            console.log(this.state);\n        });\n    }\n\n    render() {\n        const content = this.props.currentTask ? (\n            <TaskObj task={this.props.currentTask} disableEdit={true} />\n            ) : (\n                this.state.picked ? <TaskObj task={this.defaultTaskAfterPick} disableEdit={true} />\n                : <TaskObj task={this.defaultTaskBeforePick} disableEdit={true} /> \n            );\n        return (\n            <div id=\"currentTask\">\n                <div className=\"currentTaskWrapper\">\n                    {content}\n                    {this.props.currentTask ?\n                        <button id='finBtn' onClick={this.handleFinishing}>完成</button>\n                        : null}\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// const CurrentTask = ({ currentTask, auth, clearCurrentTask }) => {\n\n\n//     const content = currentTask ? (\n//         <TaskObj task={currentTask} disableEdit={true} />\n//     ) : (\n//             <span>No task!</span>\n//         );\n\n//     return (\n//         <div id=\"currentTask\">\n//             <div className=\"currentTaskWrapper\">\n//                 {content}\n//                 {currentTask ?\n//                     <button id='finBtn' onClick={clearCurrentTask}>完成</button>\n//                     : null}\n\n//             </div>\n//         </div>\n//     )\n// }\n\nconst mapStateToProps = (state) => {\n    return {\n        currentTask: state.localStore.currentTask,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        clearCurrentTask: () => { dispatch(clearCurrentTask()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentTask);","import React, { Component } from 'react';\n\n\n\n\nclass Navigation extends Component {\n\n    handleSelect = (e, i) => {\n        const areaLine = document.getElementsByClassName('area-line');\n        const titleScroll = document.getElementById('title-scroll');\n        const template = document.getElementById('template');\n        for (let item of areaLine) {\n            item.classList.remove('area-line-active');\n        }\n        e.target.classList.toggle('area-line-active');\n        titleScroll.style.transform = \"translate(0, -\" + i * 100 + \"%)\"\n        template.style.transform = \"translate(-\" + i * 100 + \"%, 0)\"\n    }\n\n    render() {\n        return (\n            <div id=\"nav\">\n                <div id=\"area-titles\">\n                    <div id=\"title-scroll\">\n                        <div className=\"title\"><span>挑任務</span></div>\n                        <div className=\"title\"><span>當下任務</span></div>\n                        <div className=\"title\"><span>新增任務</span></div>\n                        <div className=\"title\"><span>任務清單</span></div>\n                    </div>\n                </div>\n                <div id=\"area-paging\">\n                    <div className=\"pagingWrapper\">\n                        <div className=\"area-line area-line-active\" onClick={(e) => { this.handleSelect(e, 0) }}></div>\n                        <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 1) }}></div>\n                        <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 2) }}></div>\n                        <div className=\"area-line\" onClick={(e) => { this.handleSelect(e, 3) }}></div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Navigation;","import React, { Component } from 'react';\n//import TagObj from './tagObj';\nimport { connect } from 'react-redux';\nimport { addTask } from '../actions/manageTask';\nimport TagList from './tagList';\n\nclass TaskForm extends Component {\n\n    state = {\n        task: \"\",\n        description: \"\",\n        tags: [],\n        ownerId: this.props.auth.uid,\n    }\n\n    checkTagState = (isActive, tag) => {\n        let tags = [...this.state.tags];\n        if (isActive) {\n            tags.push(tag);\n            this.setState({\n                tags: tags\n            });\n        } else {\n            let newTags = tags.filter(words => words !== tag);\n            this.setState({\n                tags: newTags\n            });\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleTags = (e) => {\n        let tags = e.target.value.split(' ');\n        this.setState({\n            tags: tags\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.addTask(this.state, this.props.auth.uid)\n        this.setState({\n            task: \"\",\n            description: \"\",\n            tags: [],\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form id=\"taskForm\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" id='task' onChange={this.handleChange} value={this.state.task} autoComplete=\"off\" placeholder='任務' />\n                    <textarea type=\"text\" id='description' onChange={this.handleChange} value={this.state.description} autoComplete=\"off\" placeholder='說明' />\n                    {/* <input type=\"text\" id='tags' onChange={this.handleTags} value={this.state.tags.join(' ')} autoComplete=\"off\" /> */}\n                    <TagList checkTagState={this.checkTagState} \n                             noNewTag={false} />\n                    <div className=\"formButtonArea\">\n                        <button form=\"taskForm\">新增</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allTags: state.localStore.allTags,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTask: (task, userId) => { dispatch(addTask(task, userId)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm); ","import React from 'react';\nimport TaskObj from './taskObj';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport CustomScroll from 'react-custom-scroll';\n\n\nconst TaskList = ({ tasks, auth }) => {\n    // const defaultObjects = defaultTasks && defaultTasks.length ? (\n    //     defaultTasks.map(task => {\n    //         return (\n    //             <TaskObj key={task.id} task={task} />\n    //         )\n    //     })\n    // ) : (\n    //         <p>No Tasks!</p>\n    //     );\n\n    // const userObjects = userTasks && userTasks.length ? (\n    //     userTasks.map(task => {\n    //         return (\n    //             <TaskObj key={task.id} task={task} />\n    //         )\n    //     })\n    // ) : (\n    //         <p>No Tasks!</p>\n    //     );\n    const contents = tasks && tasks.length ? (\n        tasks.map(task => {\n            return (\n                <TaskObj key={task.id} task={task} />\n            )\n        })\n        ) : (\n            <p>No Tasks!</p>\n        );\n    return (\n        <div id=\"taskList\">\n            <div className=\"taskWrapper\">\n                <CustomScroll heightRelativeToParent=\"100%\">\n                    {contents}\n                </CustomScroll>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    // const userTasks = state.firestore.ordered.userTasks && state.firestore.ordered.userTasks.filter(task => task.ownerId === state.firebase.auth.uid);\n\n    return {\n        tasks: state.localStore.tasks,\n        // userTasks: state.localStore.tasks,\n        // userTasks: userTasks,\n        //defaultTasks: state.firestore.ordered.defaultTasks,\n        firestore: state.firestore,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'defaultTasks' }, { collection: 'userTasks' }\n    ])\n)(TaskList);","import React, { Component } from 'react';\nimport TagList from './tagList';\nimport TaskObj from './taskObj';\nimport { connect } from 'react-redux';\nimport { setCurrentTask } from '../actions/manageTask';\nimport dropUp from '../dropUp.svg';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\n\nclass Picker extends Component {\n    state = {\n        selectedTags: [],\n        pickedTask: null,\n        animationPerformed: false,\n    }\n\n    returnToDefaultStyle = () => {\n        const li2 = document.querySelector('li:nth-child(2)');\n        li2.classList.add('transparent');\n        this.setState({\n            pickedTask: null,\n            animationPerformed: false\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.loggedIn !== this.props.loggedIn) {\n            this.returnToDefaultStyle();\n        }\n\n    }\n    checkTagState = (isActive, tag) => {\n        let newTags = [...this.state.selectedTags]\n        if (isActive) {\n            newTags.push(tag);\n            this.setState({\n                selectedTags: newTags\n            });\n        } else {\n            newTags = newTags.filter(original => original !== tag);\n            this.setState({\n                selectedTags: newTags\n            });\n        }\n    }\n\n    toggleTagSelectionPannel = () => {\n        const buttonWrapper = document.getElementById('buttonWrapper');\n        if (buttonWrapper.style.display === \"none\") {\n            buttonWrapper.style.display = \"block\";\n        } else {\n            buttonWrapper.style.display = \"none\";\n        }\n        const pickerTagList = document.querySelector('#picker .tagList');\n        if (pickerTagList.style.opacity === '1') {\n            pickerTagList.style.opacity = '0';\n        } else {\n            pickerTagList.style.opacity = '1';\n        }\n        const pickerTags = document.querySelectorAll('#picker .tagObj');\n        if (pickerTags[0].style.cursor === 'pointer') {\n            pickerTags.forEach((item) => { item.style.cursor = 'default' });\n        } else {\n            pickerTags.forEach((item) => { item.style.cursor = 'pointer' });\n        }\n        const dropUpImg = document.querySelector('#tagSelectionBtn img');\n        dropUpImg.classList.toggle('flip');\n    }\n\n    pickTask = () => {\n        // Matching with selected tags\n        let allTasks = [...this.props.tasks];\n        let options = [];\n        for (let task of allTasks) {\n            let match = false;\n            for (let taskTag of task.tags) {\n                for (let sTag of this.state.selectedTags) {\n                    if (taskTag === sTag) {\n                        match = true;\n                    }\n                }\n            }\n            if (match) {\n                options.push(task);\n            }\n        }\n\n        // for animation\n        const taskDeck = document.getElementsByClassName('deckWrapper')[0];\n        if (taskDeck && !this.state.animationPerformed) {\n            taskDeck.classList.toggle('isAnimating');\n        }\n\n        // pick and set the task\n        const noMatchMsg = {\n            task: '噢不', \n            description: '沒有配對到的任務呢 :(',\n            id: 'noMatchInPicker'\n        }\n        if (this.state.selectedTags.length !== 0 && options.length === 0) {\n            console.log('nomatch');\n            this.setState({\n                pickedTask: noMatchMsg\n            });\n        } else if (options.length === 0) {\n            const tasks = [...this.props.tasks];\n            this.setState({\n                pickedTask: tasks[Math.floor(Math.random() * tasks.length)]\n            });\n        } else {\n            this.setState({\n                pickedTask: options[Math.floor(Math.random() * options.length)]\n            });\n        }\n    }\n\n    execute = () => {\n        console.log(this.state.pickedTask);\n        this.props.setCurrentTask(this.state.pickedTask);\n        // redirect\n        const areaLine = document.getElementsByClassName('area-line');\n        const titleScroll = document.getElementById('title-scroll');\n        const template = document.getElementById('template');\n        for (let item of areaLine) {\n            item.classList.remove('area-line-active');\n        }\n        areaLine[1].classList.toggle('area-line-active');\n        titleScroll.style.transform = \"translate(0, -100%)\";\n        template.style.transform = \"translate(-100%, 0)\";\n\n        // return to initial style\n        this.returnToDefaultStyle();\n    }\n\n    animationEnd = (e) => {\n        const taskDeck = document.getElementsByClassName('deckWrapper')[0];\n        const taskCard = document.getElementsByClassName('transparent')[0];\n        if (taskCard) {\n            taskCard.classList.toggle('transparent');\n        }\n        if (taskDeck) {\n            taskDeck.classList.toggle('isAnimating');\n        }\n        this.setState({\n            animationPerformed: true\n        })\n    }\n\n\n    render() {\n        return (\n            <div id=\"picker\">\n                <ul className=\"deck\">\n                    <li>\n                        <div className=\"deckWrapper\">\n                            <div className=\"pickerCard\"></div>\n                            <div className={this.state.pickedTask && this.state.pickedTask ? \"pickerCard animatedCard\" : \"pickerCard\"}\n                                onAnimationEnd={this.animationEnd}>\n                                {this.state.pickedTask && this.state.pickedTask ? <TaskObj task={this.state.pickedTask} disableEdit={true} /> : null}\n                            </div>\n                            <div className=\"pickerCard\">\n                                <div id='tagSelectionBtn'\n                                    onClick={this.toggleTagSelectionPannel}>\n                                    選取任務範圍\n                                    <img src={dropUp} alt=\"\" />\n                                </div>\n                                <TagList checkTagState={this.checkTagState} noNewTag={true} />\n                            </div>\n                            <div id='buttonWrapper'>\n                                <button id='pickerButton' onClick={this.pickTask}>\n                                    {this.state.animationPerformed ? \"再一次\" : \"挑任務\"}\n                                </button>\n                                {this.state.animationPerformed ? (\n                                    <button id='excuteBtn'\n                                        onClick={this.execute}>\n                                        執行\n                                    </button>\n                                ) : null}\n                            </div>\n\n                        </div>\n                    </li>\n                    <li className={this.animationPerformed ? \"null\" : \"transparent\"}>\n                        {this.state.pickedTask && this.state.pickedTask ? <TaskObj task={this.state.pickedTask} disableEdit={true} /> : null}\n                    </li>\n                </ul>\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loggedIn: state.firebase.auth.uid ? true : false,\n        userId: state.firebase.auth.uid,\n        tasks: state.firebase.auth.uid ? state.localStore.tasks : state.firestore.ordered.defaultTasks,\n        allTags: state.firebase.auth.uid ? state.localStore.allTags : state.firestore.ordered.defaultTags,\n        currentTask: state.localStore.currentTask\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setCurrentTask: (task) => { dispatch(setCurrentTask(task)) }\n    }\n}\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Picker);\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    firestoreConnect([\n        { collection: 'defaultTasks' }\n    ])\n)(Picker);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions/authAction';\nimport { Redirect } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport closeImg from '../close.svg';\n\nclass SignIn extends Component {\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    redirectToHome = () => {\n        return <Redirect to='/' />\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        if (this.props.auth.uid) {\n            return <Redirect to='/' />\n        }\n        return (\n            <div id=\"signInForm\">\n                <form onSubmit={this.handleSubmit}>\n                    <Link to='/' className='closeBtn'><img src={closeImg} alt=\"\" id='closeImg' /></Link>\n                    {/* <div className='authTitle'>登入</div> */}\n                    <div className=\"inputWrapper\">\n                        <input type=\"text\" id=\"email\" onChange={this.handleChange} value={this.state.email} placeholder=\"帳號\" autoComplete=\"off\" />\n                        <input type=\"password\" id='password' onChange={this.handleChange} value={this.state.password} placeholder=\"密碼\" autoComplete=\"off\" />\n                        <button>登入</button>\n                    </div>\n                </form>\n                {/* <Link onClick={() => { this.props.signOut() }} to='/'>signout</Link> */}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => { dispatch(signIn(creds)) },\n        signOut: () => { dispatch(signOut()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        // Use firebase function to sign in\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            // connect to users collection \n            const userId = firebase.auth().currentUser.uid;\n            firestore.collection('users').doc(userId).get()\n                .then((res) => {\n                    // dispatch to auth reducer with user's data\n                    dispatch({ type: \"LOGIN_SUCCESS\", data: res.data() })\n                }).then(() => {\n                    // connect to userTasks collection with the user Id then dispatch to \n                    // projectReducer\n                    firestore.collection('userTasks').where('ownerId', '==', userId).get()\n                        .then((snapshot) => {\n                            const tasks = [];\n                            snapshot.docs.forEach(doc => {\n                                const task = doc.data();\n                                task.id = doc.id;\n                                tasks.push(task);\n                            });\n                            dispatch({\n                                type: 'LOAD_TASKS_WHEN_LOGIN',\n                                tasks: tasks\n                            });\n                        }).catch((err) => {\n                            dispatch({\n                                type: 'LOAD_TASKS_ERROR',\n                                err\n                            });\n                        })\n                }).catch((err) => {\n                    console.log(err);\n                });\n            // Also Tags \n            firestore.collection('userTags').where('ownerId', '==', userId).get()\n                .then((snapshot) => {\n                    const tags = [];\n                    snapshot.docs.forEach(doc => {\n                        const tag = doc.data();\n                        tag.id = doc.id;\n                        tags.push(tag);\n                    });\n                    dispatch({\n                        type: 'LOAD_TAGS_WHEN_LOGIN',\n                        tags: tags\n                    });\n                })\n        }).catch((err) => {\n            dispatch({ type: \"LOGIN_ERROR\", err })\n        })\n    }\n}\n\nexport const signOut = () => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().signOut()\n            .then(() => {\n                dispatch({ type: \"LOGOUT_SUCCESS\" })\n            }).then(() => {\n                // switch to default tasks\n                firestore.collection('defaultTasks').get()\n                    .then((snapshot) => {\n                        const tasks = [];\n                        snapshot.docs.forEach(doc => {\n                            const task = doc.data();\n                            task.id = doc.id;\n                            tasks.push(task);\n                        });\n                        dispatch({\n                            type: 'LOAD_TASKS_WHEN_LOGOUT',\n                            tasks: tasks\n                        });\n                    });\n                // Switch to default tags\n                firestore.collection('defaultTags').get()\n                    .then((snapshot) => {\n                        const tags = [];\n                        snapshot.docs.forEach(doc => {\n                            const tag = doc.data();\n                            tag.id = doc.id;\n                            tags.push(tag);\n                        });\n                        dispatch({\n                            type: 'LOAD_TAGS_WHEN_LOGOUT',\n                            tags: tags\n                        });\n                    });\n            })\n    }\n}\n\nexport const signUp = (newUser) => {\n\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return firestore.collection('users').doc(res.user.uid).collection('user-profile').add({\n                name: newUser.name\n            })\n        }).then(() => {\n            dispatch({ type: \"SIGNUP_SUCCESS\" })\n        }).catch((err) => {\n            dispatch({ type: \"SIGNUP_ERROR\", err });\n        })\n    }\n\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { signUp } from '../actions/authAction'\nimport { Redirect, Link } from 'react-router-dom';\nimport closeImg from '../close.svg';\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        name: \"\"\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        if (this.props.auth.uid) {\n            return <Redirect to='/' />\n        }\n        return (\n            <div id='signUpForm'>\n                <form onSubmit={this.handleSubmit}>\n                    {/* <div className='authTitle'>加入吧！</div> */}\n                    <Link to='/' className='closeBtn'><img src={closeImg} alt=\"\" id='closeImg' /></Link>\n                    <div className=\"inputWrapper\">\n                        <input type=\"text\" id=\"email\" onChange={this.handleChange} value={this.state.email} placeholder=\"輸入信箱\" autoComplete=\"off\" />\n                        <input type=\"text\" id='password' onChange={this.handleChange} value={this.state.password} placeholder=\"輸入密碼\" autoComplete=\"off\" />\n                        <input type=\"text\" id=\"name\" onChange={this.handleChange} value={this.state.name} placeholder=\"你的名字\" autoComplete=\"off\" />\n                        <button>註冊</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => { dispatch(signUp(newUser)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React from 'react';\nimport { signOut } from '../actions/authAction';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Header = ({auth, signOut}) => {\n\n    const authPannel = auth.uid ? (\n        <div id='authPannel'>\n          <button onClick={() => { signOut() }}>登出</button>\n        </div>\n      ) : (\n          <div id='authPannel'>\n            <Link to=\"/signIn\">登入</Link>\n            ｜\n            <Link to='/signUp'>註冊</Link>\n          </div>\n        );\n\n    return(\n        <div id=\"header\">\n            <span id='siteTitle'>任務挑選大師</span>\n            { authPannel }\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        signOut: () => { dispatch(signOut()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\n//import { BrowserRouter, Route } from 'react-router-dom';\nimport CurrentTask from './components/currentTask';\nimport Navigation from './components/navigation';\nimport TaskForm from './components/taskForm';\nimport TaskList from './components/taskList';\nimport Picker from './components/picker';\nimport SignIn from './components/signIn';\nimport SignUp from './components/signUp';\nimport Header from './components/header';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { signOut } from './actions/authAction';\nimport { loadDataToCentral } from './actions/manageTask';\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    if (this.props.firebase.auth.uid) {\n     this.props.loadDataToCentral(this.props.firebase.auth.uid);\n    } else {\n      this.props.loadDataToCentral();\n    }\n  }\n\n  render() {\n    \n    // Serve different component with login state\n    \n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <ul id='template'>\n            <li className='mainArea'><Picker /></li>\n            <li className='mainArea'><CurrentTask /></li>\n            <li className='mainArea'><TaskForm /></li>\n            <li className='mainArea'><TaskList /></li>\n          </ul>\n          <Navigation />\n          <Header />\n          <Route path='/signIn' component={SignIn} />\n          <Route path='/signUp' component={SignUp} />\n          \n          {/* <PersonalPanel /> */}\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => { dispatch(signOut()) },\n    loadDataToCentral: (ownerId) => { dispatch(loadDataToCentral(ownerId)) },\n    clearCentralTasks: () => { dispatch({ type: \"CLEAR_CENTRAL_TASKS\" }) }\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    tasks: [],\n    allTags: [],\n    currentTask: null\n}\n\nconst projectReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case \"LOAD_TASKS_WHEN_LOGIN\":\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        case \"LOAD_TASKS_WHEN_LOGOUT\":\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        case \"LOAD_TAGS_WHEN_LOGIN\":\n            return {\n                ...state,\n                allTags: action.tags\n            }\n        case \"LOAD_TAGS_WHEN_LOGOUT\":\n            return {\n                ...state,\n                allTags: action.tags\n            }\n        case \"LOAD_TASKS_FROM_FIRESTORE\":\n            return {\n                ...state,\n                tasks: action.tasks\n            }\n        case \"LOAD_TAGS_FROM_FIRESTORE\":\n            return {\n                ...state,\n                allTags: action.tags\n            }\n        case \"CLEAR_CENTRAL_TASKS\":\n            return state\n        case \"ADD_TASK\":\n            let addingTask = action.task;\n            addingTask.id = action.taskId;\n            let addingTasks = [...state.tasks, addingTask];\n            return {\n                ...state,\n                tasks: addingTasks\n            }\n        case \"ADD_TASK_ERROR\":\n            return state;\n        case \"DELETE_TASK\":\n            console.log('Task deleted');\n            let deletingTasks = [...state.tasks];\n            deletingTasks = deletingTasks.filter(task => task.id !== action.taskId);\n            return {\n                ...state,\n                tasks: deletingTasks\n            };\n        case \"DELETE_TASK_ERROR\":\n            console.log(action.err);\n            return state;\n        case \"UPDATE_TASK\":\n            console.log('update success');\n            let updatingTasks = [...state.tasks];\n            const itemIndex = state.tasks.findIndex(task => task.id === action.task.id);\n            updatingTasks[itemIndex] = action.task;\n            return {\n                ...state,\n                tasks: updatingTasks\n            }\n        case \"UPDATE_TASK_ERROR\":\n            console.log(action.err);\n            return state;\n        case \"UPDATE_DEFAULT_TASK\":\n            let updatingDefaultTasks = [...state.tasks];\n            const index = updatingDefaultTasks.findIndex(item => item.id === action.task.id);\n            updatingDefaultTasks[index] = action.task;\n            return {\n                ...state,\n                tasks: updatingDefaultTasks\n            }\n        case \"ADD_TAG\":\n            // First, check if new tag already exsists\n            let shouldAdd = true;\n            for (let tag of state.allTags) {\n                if (action.tag === tag) {\n                    shouldAdd = false;\n                }\n            }\n            // Add it to state\n            let newAllTags = [...state.allTags];\n            if (shouldAdd) {\n                newAllTags.push(action.tag);\n                console.log(newAllTags);\n                return {\n                    ...state,\n                    allTags: newAllTags\n                }\n            } else {\n                return state;\n            }\n        case \"SET_CURRENT_TASK\":\n            return {\n                ...state,\n                currentTask: action.task\n            }\n        case \"CLEAR_CURRENT_TASK\":\n            return {\n                ...state,\n                currentTask: null\n            }\n        default:\n            return state\n    }\n}\n\nexport default projectReducer;","const initState = {\n    authError: null,\n    userTasks: [],\n    userTags: []\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            return {\n                ...state,\n                authError: \"Login failed :(\"\n            }\n\n        case \"LOGIN_SUCCESS\":\n            return {\n                authError: null,\n                userTasks: action.data.userTasks,\n                userTags: action.data.userTags\n            }\n        \n        case \"USER_DATA_LOADED\":\n            return state;\n        case \"LOGOUT_SUCCESS\":\n            return state\n\n        case \"SIGNUP_SUCCESS\": \n            return {\n                ...state,\n                authError: null\n            }\n\n        case \"SIGNUP_ERROR\": \n            console.log('signup failed');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n            \n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import projectReducer from './projectReducer';\nimport authReducer from './authReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    localStore: projectReducer,\n    auth: authReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyDolOZMc-UodjynPUfkjyrq9m95VO3Peck\",\n    authDomain: \"task-picker-de255.firebaseapp.com\",\n    databaseURL: \"https://task-picker-de255.firebaseio.com\",\n    projectId: \"task-picker-de255\",\n    storageBucket: \"task-picker-de255.appspot.com\",\n    messagingSenderId: \"614294430544\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({timestampsInSnapshots: true});\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport firebaseConfig from './config/firebaseConfig';\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(\n            thunk.withExtraArgument({ getFirebase, getFirestore })\n        ),\n        reduxFirestore(firebaseConfig),\n        reactReduxFirebase(firebaseConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n","module.exports = __webpack_public_path__ + \"static/media/close.b98f9d73.svg\";"],"sourceRoot":""}